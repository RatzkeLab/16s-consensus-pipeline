# Demo configuration file for ONT 16S consensus pipeline
# If no other config file is specified (using the --config modifier), this will be used by default

# ==================== Input/Output ====================

# Input directory containing FASTQ files (*.fastq or *.fastq.gz)
# if demultiplexing using minibar, make sure you have reversed backwards reads first
input_dir: "demo/unflipped"

# Output directory for all results
outdir: "demo/demo_output"

# Final database filenames
naive_database_filename: "naive_db.fasta"
multi_database_filename: "multi_db.fasta"

# Pairwise edit distance report
pairwise_distance:
  # Automatically calculate trim values based on longest leading/trailing gaps
  # If true, ignore_first_n_bp and ignore_last_n_bp are ignored
  auto_trim: false
  
  # Number of bp to ignore at start of sequences when calculating distances
  # (reduces noise from alignment artifacts at sequence ends)
  # Only used if auto_trim is false
  ignore_first_n_bp: 70
  
  # Number of bp to ignore at end of sequences when calculating distances
  # Only used if auto_trim is false
  ignore_last_n_bp: 70


# ==================== Quality Control ====================

# Minimum number of reads required per sample (before filtering)
# Samples with fewer reads will be excluded from analysis
min_reads_initial: 10

# Minimum number of reads required per sample (after filtering)
# Samples with fewer reads will be excluded from alignment
min_reads_filtered: 5

# ==================== Filtering (NanoFilt) ====================

filter:
  headcrop: 0  # Number of bases to trim from the start
  tailcrop: 0  # Number of bases to trim from the end
  # Minimum average Q-score for reads (0 to disable)
  min_avg_qscore: 10
  
  # Minimum read length in bases (0 to disable)
  min_length: 1300
  
  # Maximum read length in bases (0 to disable)
  max_length: 1700


# ==================== Subsampling ====================

# Number of reads to randomly subsample for alignment (0 = use all reads)
subsample_n: 150

# Subsampling settings
subsample:
  # Fixed random seed for deterministic subsampling (seqtk -s)
  seed: 42


# ==================== Alignment ====================

alignment:
  # MAFFT algorithm for per-sample alignment
  # Options: "auto" (mafft decides automatically) or "ginsi" (accurate, slow)
  mafft_algorithm: "ginsi"
  # Gap opening penalty (default: 1.53 for --auto, algorithm-specific otherwise)
  # Set to 0 to use MAFFT defaults
  gap_open: 0
  # Gap extension penalty (default: 0.123 for --auto, algorithm-specific otherwise)
  # Set to 0 to use MAFFT defaults
  gap_extend: 0
  
cluster_alignment:
  # MAFFT algorithm for cluster realignment
  # Options: "auto" (mafft decides automatically) or "ginsi" (accurate, slow)
  mafft_algorithm: "ginsi"
  # Gap opening penalty (0 = use MAFFT defaults)
  gap_open: 0
  # Gap extension penalty (0 = use MAFFT defaults)
  gap_extend: 0
  
multi_alignment:
  # MAFFT algorithm for final multi-consensus alignment
  # Options: "auto" (mafft decides automatically) or "ginsi" (accurate, slow)
  mafft_algorithm: "default"
  # Gap opening penalty (0 = use MAFFT defaults)
  gap_open: 0
  # Gap extension penalty (0 = use MAFFT defaults)
  gap_extend: 0


# ==================== Consensus ====================

naive_consensus:
  # Minimum proportion required for winner-takes-all (0.6 = 60%)
  # Below this threshold, all variants at position are recorded
  min_consensus_proportion: 0.6

multi_consensus:
  # Minimum number of variable positions required to attempt clustering
  # If fewer positions are variable than this value, clustering/splitting will be skipped
  min_variable_positions: 3

  # Automatically calculate trim values based on longest leading/trailing gaps
  # If true, trim_bp is ignored
  auto_trim: false

  # Number of bp to ignore at start and end of alignment when detecting clusters
  # (reduces noise from alignment artifacts at ends)
  # Only used if auto_trim is false
  trim_bp: 70

  # Minimum proportion for majority agreement at a position (0.8 = 80%)
  # Positions below this threshold are used for clustering
  min_agreement: 0.8
  
  # Minimum number of reads required to form a separate cluster (absolute)
  min_cluster_size: 5
  
  # Minimum cluster size as percentage of total reads (0-100)
  # Whichever is larger (absolute or percent) will be used
  # Set to 0 to only use absolute min_cluster_size
  min_cluster_size_percent: 5.0
  
  # Maximum number of clusters to consider
  # Hierarchical clustering will automatically find optimal number up to this limit
  max_clusters: 10

  # Minimum proportion required for winner-takes-all (0.6 = 60%)
  # Below this threshold, all variants at position are recorded
  min_consensus_proportion: 0.6

